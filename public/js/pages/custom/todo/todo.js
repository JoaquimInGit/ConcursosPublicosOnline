/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 117);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/metronic/js/pages/custom/todo/todo.js":
/*!*********************************************************!*\
  !*** ./resources/metronic/js/pages/custom/todo/todo.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // Class definition\n\nvar KTAppTodo = function () {\n  // Private properties\n  var _asideEl;\n\n  var _listEl;\n\n  var _viewEl;\n\n  var _replyEl;\n\n  var _asideOffcanvas; // Private methods\n\n\n  var _initEditor = function _initEditor(form, editor) {\n    // init editor\n    var options = {\n      modules: {\n        toolbar: {}\n      },\n      placeholder: 'Type message...',\n      theme: 'snow'\n    };\n\n    if (!KTUtil.getById(editor)) {\n      return;\n    } // Init editor\n\n\n    var editor = new Quill('#' + editor, options); // Customize editor\n\n    var toolbar = KTUtil.find(form, '.ql-toolbar');\n    var editor = KTUtil.find(form, '.ql-editor');\n\n    if (toolbar) {\n      KTUtil.addClass(toolbar, 'px-5 border-top-0 border-left-0 border-right-0');\n    }\n\n    if (editor) {\n      KTUtil.addClass(editor, 'px-8');\n    }\n  };\n\n  var _initAttachments = function _initAttachments(elemId) {\n    if (!KTUtil.getById(elemId)) {\n      return;\n    }\n\n    var id = \"#\" + elemId;\n    var previewNode = $(id + \" .dropzone-item\");\n    previewNode.id = \"\";\n    var previewTemplate = previewNode.parent('.dropzone-items').html();\n    previewNode.remove();\n    var myDropzone = new Dropzone(id, {\n      // Make the whole body a dropzone\n      url: \"https://keenthemes.com/scripts/void.php\",\n      // Set the url for your upload script location\n      parallelUploads: 20,\n      maxFilesize: 1,\n      // Max filesize in MB\n      previewTemplate: previewTemplate,\n      previewsContainer: id + \" .dropzone-items\",\n      // Define the container to display the previews\n      clickable: id + \"_select\" // Define the element that should be used as click trigger to select files.\n\n    });\n    myDropzone.on(\"addedfile\", function (file) {\n      // Hookup the start button\n      $(document).find(id + ' .dropzone-item').css('display', '');\n    }); // Update the total progress bar\n\n    myDropzone.on(\"totaluploadprogress\", function (progress) {\n      document.querySelector(id + \" .progress-bar\").style.width = progress + \"%\";\n    });\n    myDropzone.on(\"sending\", function (file) {\n      // Show the total progress bar when upload starts\n      document.querySelector(id + \" .progress-bar\").style.opacity = \"1\";\n    }); // Hide the total progress bar when nothing's uploading anymore\n\n    myDropzone.on(\"complete\", function (progress) {\n      var thisProgressBar = id + \" .dz-complete\";\n      setTimeout(function () {\n        $(thisProgressBar + \" .progress-bar, \" + thisProgressBar + \" .progress\").css('opacity', '0');\n      }, 300);\n    });\n  }; // Public methods\n\n\n  return {\n    // Public functions\n    init: function init() {\n      // Init variables\n      _asideEl = KTUtil.getById('kt_todo_aside');\n      _listEl = KTUtil.getById('kt_todo_list');\n      _viewEl = KTUtil.getById('kt_todo_view');\n      _replyEl = KTUtil.getById('kt_todo_reply'); // Init handlers\n\n      KTAppTodo.initAside();\n      KTAppTodo.initList();\n      KTAppTodo.initView();\n      KTAppTodo.initReply();\n    },\n    initAside: function initAside() {\n      // Mobile offcanvas for mobile mode\n      _asideOffcanvas = new KTOffcanvas(_asideEl, {\n        overlay: true,\n        baseClass: 'offcanvas-mobile',\n        //closeBy: 'kt_todo_aside_close',\n        toggleBy: 'kt_subheader_mobile_toggle'\n      }); // View list\n\n      KTUtil.on(_asideEl, '.list-item[data-action=\"list\"]', 'click', function (e) {\n        var type = KTUtil.attr(this, 'data-type');\n        var listItemsEl = KTUtil.find(_listEl, '.kt-inbox__items');\n        var navItemEl = this.closest('.kt-nav__item');\n        var navItemActiveEl = KTUtil.find(_asideEl, '.kt-nav__item.kt-nav__item--active'); // demo loading\n\n        var loading = new KTDialog({\n          'type': 'loader',\n          'placement': 'top center',\n          'message': 'Loading ...'\n        });\n        loading.show();\n        setTimeout(function () {\n          loading.hide();\n          KTUtil.css(_listEl, 'display', 'flex'); // show list\n\n          KTUtil.css(_viewEl, 'display', 'none'); // hide view\n\n          KTUtil.addClass(navItemEl, 'kt-nav__item--active');\n          KTUtil.removeClass(navItemActiveEl, 'kt-nav__item--active');\n          KTUtil.attr(listItemsEl, 'data-type', type);\n        }, 600);\n      });\n    },\n    initList: function initList() {\n      // Group selection\n      KTUtil.on(_listEl, '[data-inbox=\"group-select\"] input', 'click', function () {\n        var messages = KTUtil.findAll(_listEl, '[data-inbox=\"message\"]');\n\n        for (var i = 0, j = messages.length; i < j; i++) {\n          var message = messages[i];\n          var checkbox = KTUtil.find(message, '.checkbox input');\n          checkbox.checked = this.checked;\n\n          if (this.checked) {\n            KTUtil.addClass(message, 'active');\n          } else {\n            KTUtil.removeClass(message, 'active');\n          }\n        }\n      }); // Individual selection\n\n      KTUtil.on(_listEl, '[data-inbox=\"message\"] [data-inbox=\"actions\"] .checkbox input', 'click', function () {\n        var item = this.closest('[data-inbox=\"message\"]');\n\n        if (item && this.checked) {\n          KTUtil.addClass(item, 'active');\n        } else {\n          KTUtil.removeClass(item, 'active');\n        }\n      });\n    },\n    initView: function initView() {\n      // Back to listing\n      KTUtil.on(_viewEl, '[data-inbox=\"back\"]', 'click', function () {\n        // demo loading\n        var loading = new KTDialog({\n          'type': 'loader',\n          'placement': 'top center',\n          'message': 'Loading ...'\n        });\n        loading.show();\n        setTimeout(function () {\n          loading.hide();\n          KTUtil.addClass(_listEl, 'd-block');\n          KTUtil.removeClass(_listEl, 'd-none');\n          KTUtil.addClass(_viewEl, 'd-none');\n          KTUtil.removeClass(_viewEl, 'd-block');\n        }, 700);\n      }); // Expand/Collapse reply\n\n      KTUtil.on(_viewEl, '[data-inbox=\"message\"]', 'click', function (e) {\n        var message = this.closest('[data-inbox=\"message\"]');\n        var dropdownToggleEl = KTUtil.find(this, '[data-toggle=\"dropdown\"]');\n        var toolbarEl = KTUtil.find(this, '[data-inbox=\"toolbar\"]'); // skip dropdown toggle click\n\n        if (e.target === dropdownToggleEl || dropdownToggleEl && dropdownToggleEl.contains(e.target) === true) {\n          return false;\n        } // skip group actions click\n\n\n        if (e.target === toolbarEl || toolbarEl && toolbarEl.contains(e.target) === true) {\n          return false;\n        }\n\n        if (KTUtil.hasClass(message, 'toggle-on')) {\n          KTUtil.addClass(message, 'toggle-off');\n          KTUtil.removeClass(message, 'toggle-on');\n        } else {\n          KTUtil.removeClass(message, 'toggle-off');\n          KTUtil.addClass(message, 'toggle-on');\n        }\n      });\n    },\n    initReply: function initReply() {\n      _initEditor(_replyEl, 'kt_todo_reply_editor');\n\n      _initAttachments('kt_todo_reply_attachments');\n    }\n  };\n}(); // Class Initialization\n\n\njQuery(document).ready(function () {\n  KTAppTodo.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/metronic/js/pages/custom/todo/todo.js\n");

/***/ }),

/***/ 117:
/*!***************************************************************!*\
  !*** multi ./resources/metronic/js/pages/custom/todo/todo.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /home/vagrant/laravel/concursos-publicos/resources/metronic/js/pages/custom/todo/todo.js */"./resources/metronic/js/pages/custom/todo/todo.js");


/***/ })

/******/ });